---
title: "Visualización de Datos"
subtitle: "Práctica 1: Entornos de Desarrollo para Jupyter Notebook"
author: "Francisco Javier Mercader Martínez"
format: 
    pdf:
        documentclass: article
        fontsize: 10pt
        papersize: a4
        header-includes: |
            \renewcommand{\and}{\\}
            \usepackage{fvextra}
            \usepackage{hyperref}
            \DefineVerbatimEnvironment{Highlighting}{Verbatim}{breaklines, commandchars=\\\{\}}
engine: knitr
geometry: margin=1.5cm
---

# Parte 1. Desarrollo local con Docker y Jupyter

## Actividades

**Actividad 1.** Ejecutar un servidor de Jupyter Notebook con Docker.

```{bash}
# Descargar la imagen de Jupyter desde Docker Hub
docker pull jupyter/base-notebook

# Verificar que la imagen se ha descargado correctamente
docker images
```

``` bash
# Ejecutar el contenedor
docker run -p 8888:8888 jupyter/base-notebook
```

```         
http://127.0.0.1:8888/lab?token=7738cd1b7384d071bf5375d61a74949f8634da3dc8e04a58
```

**Actividad 2.** Instalar paquetes adicionales.

``` bash
# Verificar el contenedor en ejecución
docker ps

# Instalar numpy dentro del contenedor en ejecución
docker exec 7d434b11306e pip install numpy

# Detener el docker
docker stop 7d434b11306e

# Reiniciar el contenedor y verificar que numpy está instalado
docker run -p 8888:8888 jupyter/base-notebook
```

```         
CONTAINER ID   IMAGE                   COMMAND                  CREATED          STATUS                    PORTS                                       NAMES
7d434b11306e   jupyter/base-notebook   "tini -g -- start-no…"   14 seconds ago   Up 13 seconds (healthy)   0.0.0.0:8888->8888/tcp, :::8888->8888/tcp   elastic_pascal


Collecting numpy
  Downloading numpy-2.2.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (62 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 62.0/62.0 kB 5.6 MB/s eta 0:00:00
Downloading numpy-2.2.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (16.4 MB)
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 16.4/16.4 MB 38.0 MB/s eta 0:00:00
Installing collected packages: numpy
Successfully installed numpy-2.2.2
```

**Actividad 3**

-   Paso 1: Crear un Dockerfile

``` dockerfile
FROM jupyter/base-notebook
RUN pip install numpy pandas matplotlib
```

-   Paso 2: Construir la imagen personalizada

``` bash
docker build -t custom-notebook .
```

-   Paso 3: Ejecutar el contenedor con la nueva imagen

``` bash
docker run -p 8888:8888 custom-notebook
```

-   Paso 4: Crear una imagen a partir de un contenedor en ejecución

``` bash
docker ps
docker commit 3567320794e5 alt-custom-notebook
```

```         
CONTAINER ID   IMAGE             COMMAND                  CREATED          STATUS                    PORTS                                       NAMES
3567320794e5   custom-notebook   "tini -g -- start-no…"   19 seconds ago   Up 19 seconds (healthy)   0.0.0.0:8888->8888/tcp, :::8888->8888/tcp   festive_torvalds
```

**Actividad 4.** Acceder desde el Host

```{bash}
pwd
```

``` bash
docker run -p 8888:8888 -v wor:/home/jovyan/work custom-notebook
```

# Parte 2: Gestión de paquetes y entornos virtuales en Python

**Actividad 1.** Crear un Entorno virtual con **`venv`** y **`conda`**.

```{bash}
python -m venv mi_entorno
source mi_entorno/bin/activate
```

``` bash
conda create --name mi_entorno
conda activate mi_entorno
```

**Actividad 2.** Gestión de paquetes con **`pip`** y **`conda`**

```{bash}
pip install numpy pandas matplotlib
pip list
```

``` bash
conda install numpy pandas matplotlib
conda list
```

```bash
pip install jupyter
python -m ipykernel install --user --name=mi_entorno --display-name "Python (mi entorno)"
jupyter notebook
```

**Actividad 3.** Cambiar entre Entornos Virtuales

```{bash}
# Exportar paquetes instalados
pip freese > requierements.txt

# Desactivar el entorno actual
deactivate
```

```bash
# Crear un nuevo entorno y restaurar los paquetes
python -m venv otro_entorno
source otro_entorno/bin/activate
pip install -r requierements.txt
```

# Parte 3. Control de versiones con Git y GitHub

**Actividad 1.** Configuración de Git en el Entorno Local

```bash
git config --global user.name "Francisco Javier Mercader Martínez"
git config --global user.email "franciscojavier.mercader@edu.upct.es"
```

```bash
# Comprobamos que tenemos la clave de SSH
ls -l ~/.ssh/

# Agregar la clave SSH a GitHub
cat ~/.ssh/id_rsa.pub | xclip -selection clipboard
```

**Actividad 2.** Creación y Clonación de un Repositorio en GitHub

``` bash
git clone https://github.com/franjavi-upct-es/cid-upct
cd cid-upct
```

**Actividad 3.** Agregar y Versionar un Jupyter Notebook

```{bash}
git add .
git commit -m "Añadir mi notebook"
git push origin main
```

**Actividad 4.** Gestión de Cambios y Resolución de Conflictos

```{bash}
git pull origin main
```

**Actividad 5.** Uso de Ramas y Colaboración con Pull Requests

``` bash
git checkout -b master
git commit -m "Cambios en la rama `master`"
git push origin master
```
